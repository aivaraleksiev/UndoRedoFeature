name: Linux GCC build
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  Build_and_run_tests:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4    

    - name: Install Conan to fetch package dependencies
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"

    - name: Create default Conan profile
      run: conan profile detect --force

    - name: Conan install
      run: conan install . -s build_type=Release -s compiler.cppstd=gnu23 --output-folder=build-x64/conan --build=missing
    
    - name: Configure CMake
      shell: bash
      run: |
       cd $GITHUB_WORKSPACE/build-x64
       cmake -S .. -B . -D CMAKE_TOOLCHAIN_FILE=./conan/conan_toolchain.cmake -D CMAKE_BUILD_TYPE=Release

    - name: Build
      shell: bash
      run: |
       # Similar to running: $GITHUB_WORKSPACE/run_build.sh
       cmake --build ./build-x64 --config Release

    - name: Run test
      shell: bash
      run: |
       cd $GITHUB_WORKSPACE/build-x64
       ctest -C Release

    - name: Publish to codecov
      uses: codecov/codecov-action@v2
      with:
        flags: ${{ runner.os }}
        name: ${{ runner.os }}-coverage
        files: ./build/coverage.xml

   # - name: Upload coverage reports to Codecov
 #     uses: codecov/codecov-action@v4.0.1
 #     with:
 #       token: ${{ secrets.CODECOV_TOKEN }}
 #       version: "v0.1.15"
 #       slug: aivaraleksiev/UndoRedoFeature



